name: Integration Testing Realm JS (Pull Request)

on:
  pull_request:
    paths:
      # Source code
      - '*'
      - 'lib/**'
      - 'src/**'
      - 'types/**'
      - 'react-native/**'
      - 'vendor/**'
      # Integration tests
      - 'integration-tests/**'
      # No need to run when updating documentation
      - '!**.md'

jobs:
  node:
    if: ${{ false }}
    name: Node.js on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # Install the root package (--ignore-scripts to avoid downloading or building the native module)
      - run: npm ci --ignore-scripts
      # Bootstrap lerna sub-packages (builds the packages and Realm JS native module)
      - run: npx lerna bootstrap --scope realm-node-tests --include-dependencies
      # Lint, build and test the package
      - run: npm test --prefix integration-tests/environments/node
        env:
          MOCHA_REMOTE_CONTEXT: missingServer
  react-native-ios:
    name: React Native on iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      # TODO: Expose a way to skip building the Node.js native module
      - name: Patch package.json to avoid building Node.js native module
        run: cat <<< $(jq '.scripts.install = "echo skipping install"' < package.json) > package.json
      # Install the root package
      - run: npm ci
      # Restore the xcframework from cache (if possible)
      - uses: actions/cache@v2
        name: Restore xcframework from cache
        id: cache-xcframework
        with:
          path: react-native/ios/realm-js-ios.xcframework
          key: xcframework-${{ hashFiles('src/**', 'react-native/ios/**', 'vendor/**') }}
      # Restore the derived data
      - uses: actions/cache@v2
        name: Restore Xcode "derived data" from cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: xcode-derived-data
      # Restore the CocoaPods
      - uses: actions/cache@v2
        name: Restore CocoaPods from cache
        with:
          path: integration-tests/environments/react-native/ios/Pods
          key: cocoapods
      # Build the iOS xcframework (if cache missed)
      - run: ./scripts/build-ios.sh -c Debug -s
        if: steps.cache-xcframework.outputs.cache-hit != 'true'
      # Bootstrap lerna sub-packages (builds the packages and Realm JS native module)
      - run: npx lerna bootstrap --scope '{realm-integration-tests,realm-react-native-tests}' --include-dependencies
      # Run the tests (natively and in Chome debugging mode)
      - name: Run tests (Native)
        run: npm run test:ios --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer,mode=native
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
      - name: Run tests (Chrome Debugging)
        run: npm run test:ios --prefix integration-tests/environments/react-native
        env:
          MOCHA_REMOTE_CONTEXT: missingServer,mode=chrome-debugging
          MOCHA_REMOTE_REPORTER: mocha-github-actions-reporter
